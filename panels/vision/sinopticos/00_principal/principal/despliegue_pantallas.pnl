V 14
2
LANG:10001 0 
LANG:10010 0 
PANEL,-1 -1 1024 284 N "LIB_IRC_BLANCO" 0
"main()
{
  dyn_int posicion_x, posicion_y, coord_x, coord_y;
  string dp_config_usuario;

  mapping tamano_pantallas = mmGetMyRealScreenSizes();
  int numero_pantallas_configuradas, numero_pantallas_disponibles = mappinglen(tamano_pantallas);
  //Recuperamos n√∫mero de Ui actual.
  int n_ui = myUiNumber();
  string ui_pantalla_dp, ui_botonera_dp;

  dp_config_usuario = \"graficas_\" + getUserName();

  if (!dpExists(dp_config_usuario))
  {
    dpCreate(dp_config_usuario, \"000_GRAFICAS_FRECUENTES\");
  }

  dp_config_usuario = \"ui_\" + n_ui + \"_config_\" + getUserName();

  if (!dpExists(dp_config_usuario))
  {
    dpCreate(dp_config_usuario, \"000_CONFIGURACION_PANTALLA\");
  }

  for (int i = 1; i <= numero_pantallas_disponibles; i++)
  {
    dynAppend(posicion_x, tamano_pantallas[i][1]);
    dynAppend(posicion_y, tamano_pantallas[i][2]);
    dynAppend(coord_x, tamano_pantallas[i][3]);
    dynAppend(coord_y, tamano_pantallas[i][4]);
  }

  dpSet(dp_config_usuario + \".pantallas_disponibles\", numero_pantallas_disponibles,
        dp_config_usuario + \".posicion_x\", posicion_x,
        dp_config_usuario + \".posicion_y\", posicion_y,
        dp_config_usuario + \".coord_x\", coord_x,
        dp_config_usuario + \".coord_y\", coord_y);

  dpGet(dp_config_usuario + \".pantallas_configuradas\", numero_pantallas_configuradas);




  //Comprueba si no hay pantallas configuradas o el numero de pantallas configuradas es mayor que el numero de pantallas disponibles para igualarlo
  if (numero_pantallas_configuradas == 0 || numero_pantallas_configuradas > numero_pantallas_disponibles)
  {
    dpSet(dp_config_usuario + \".pantallas_configuradas\", numero_pantallas_disponibles);
    numero_pantallas_configuradas = numero_pantallas_disponibles;
  }

  // Abrimos tantas pantallas como numero de pantallas disponibles
  for (int i = 1; i <= numero_pantallas_configuradas; i++)
  {
    ui_pantalla_dp = \"ui_\" + n_ui + \"_pantalla_\" + i;
    ui_botonera_dp = \"ui_\" + n_ui + \"_botonera_\" + i;

    if (!dpExists(ui_pantalla_dp))
    {
      dpCreate(ui_pantalla_dp, \"000_PANTALLA_ACTUAL\");
    }

    if (!dpExists(ui_botonera_dp))
    {
      dpCreate(ui_botonera_dp, \"000_BOTONERA_ACTUAL\");
    }

    delay(0, 200);

    if (i == 1) dpSet(ui_pantalla_dp + \".pantalla_actual\", \"INICIO\",
                        ui_botonera_dp + \".indice\", 1);
    else if (i == 2) dpSet(ui_pantalla_dp + \".pantalla_actual\", \"INICIO\",
                 ui_botonera_dp + \".indice\", 1);
    else if (i == 3) dpSet(ui_pantalla_dp + \".pantalla_actual\", \"INICIO\",
                 ui_botonera_dp + \".indice\", 1);
    else if (i == 4) dpSet(ui_pantalla_dp + \".pantalla_actual\", \"INICIO\",
                 ui_botonera_dp + \".indice\", 1);
    else if (i == 5) dpSet(ui_pantalla_dp + \".pantalla_actual\", \"INICIO\",
                 ui_botonera_dp + \".indice\", 1);
    else dpSet(ui_pantalla_dp + \".pantalla_actual\", \"INICIO\",
                 ui_botonera_dp + \".indice\", 1);

    ModuleOnWithPanel(\"PANTALLA\" + i, tamano_pantallas[i][3], tamano_pantallas[i][4], tamano_pantallas[i][1], tamano_pantallas[i][2],
                      1, 1, \"\",
                      \"vision/sinopticos/00_principal/principal_\" + i + \".pnl\", \"PANTALLA\" + i, makeDynString(\"$NOMPANTALLA:PANTALLA\" + i, \"$RESET:16_HMI.d_Reset_HMI\"));
  }

  //Se cierra el panel de despliegue
  PanelOff();
}
" 0
 E E E E 1 -1 -1 0  60 80
""0  1
E "mapping mmGetMyRealScreenSizes()
{
  mapping mMyScreenSize;
  dyn_dyn_int ddiScreenSituation;

  // Iterate through the existing screens and save there size and location
  for(int i = 0; i <= getScreenCount() - 1; i++)
  {
    ddiScreenSituation[i+1] = makeDynInt();
    getScreenSize(ddiScreenSituation[i+1][1], ddiScreenSituation[i+1][2],
                  ddiScreenSituation[i+1][3], ddiScreenSituation[i+1][4], i);
  }

  // Sort the screens by location X and Y
  dynDynSort(ddiScreenSituation, makeDynInt(4,3));

  // Fill the mapping in the order of the sorting with the size information
  for(int i = 1; i <= dynlen(ddiScreenSituation); i++)
  {
    mMyScreenSize[i] = makeMapping();

    // Ancho pantalla, X
    mMyScreenSize[i][1] = ddiScreenSituation[i][1];
    // Alto pantalla, Y
    mMyScreenSize[i][2] = ddiScreenSituation[i][2];
    // Referencia X
    mMyScreenSize[i][3] = ddiScreenSituation[i][3];
    // Referencia Y
    mMyScreenSize[i][4] = ddiScreenSituation[i][4];
  }
  return mMyScreenSize;
}" 0
 4
"CBRef" "1"
"EClose" E
"dpi" "96"
"pdpi" "96"
0 0 0
"logotipos/logo_deuser.svg" -1 -1 697 122
-1
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
2
LANG:10001 0 
LANG:10010 0 
0
LAYER, 1 
2
LANG:10001 0 
LANG:10010 0 
0
LAYER, 2 
2
LANG:10001 0 
LANG:10010 0 
0
LAYER, 3 
2
LANG:10001 0 
LANG:10010 0 
0
LAYER, 4 
2
LANG:10001 0 
LANG:10010 0 
0
LAYER, 5 
2
LANG:10001 0 
LANG:10010 0 
0
LAYER, 6 
2
LANG:10001 0 
LANG:10010 0 
0
LAYER, 7 
2
LANG:10001 0 
LANG:10010 0 
0
0
